<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Minimum Viable Blog</title>
    <link>http://isaaclyman.com/blog/</link>
    <description>Recent content on Minimum Viable Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© 2017 by Isaac Lyman. Site powered by Hugo and GitHub.</copyright>
    <lastBuildDate>Sat, 19 Aug 2017 06:54:57 -0600</lastBuildDate>
    
	<atom:link href="http://isaaclyman.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lyman&#39;s Law</title>
      <link>http://isaaclyman.com/blog/posts/lymans-law/</link>
      <pubDate>Sat, 19 Aug 2017 06:54:57 -0600</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/lymans-law/</guid>
      <description>A pretty-darned-optional part of being a software developer is getting a generally-applicable principle (a &amp;ldquo;law&amp;rdquo;) named after yourself. Most of the time, it seems, this happens unintentionally&amp;ndash;the law&amp;rsquo;s originator doesn&amp;rsquo;t necessarily foresee it becoming a pithy and oft-repeated internet adage. But if I could choose a principle to call &amp;ldquo;Lyman&amp;rsquo;s Law,&amp;rdquo; I think it might be this one:
 Code accompanied by unit tests will have a higher standard of code quality than code written without unit tests, even if the unit tests themselves are not taken into account.</description>
    </item>
    
    <item>
      <title>The tech company scorecard</title>
      <link>http://isaaclyman.com/blog/posts/the-tech-company-scorecard/</link>
      <pubDate>Mon, 14 Aug 2017 08:15:57 -0600</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/the-tech-company-scorecard/</guid>
      <description>I’ve created this system for rating technology companies based on the way they conduct business, their place in the community and how they treat their developers. It’s a work in progress and I welcome your commentary.
There are 24 criteria under six categories. I would consider any company that scores positively on 12 or more of these criteria to be “a good place to work.” I have my doubts about whether any existing company could achieve a perfect score, so please don’t take it personally if your company comes up short in multiple areas.</description>
    </item>
    
    <item>
      <title>Introduction &amp; site info</title>
      <link>http://isaaclyman.com/blog/posts/introduction/</link>
      <pubDate>Sat, 12 Aug 2017 11:16:33 -0600</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/introduction/</guid>
      <description>Hi. This is my personal blog. I&amp;rsquo;ll be migrating my posts from other platforms to this site.
I&amp;rsquo;m a software developer, a family man, a B.A. in English, and a Mormon. My writing is motivated by all of these things.
Comment Policy  Be pleasant. Keep it PG. Don&amp;rsquo;t advertise. Don&amp;rsquo;t hate.
 I welcome most forms of discussion and questions. That said: distasteful opinions, rudeness, and anything NSFW will be deleted on sight.</description>
    </item>
    
    <item>
      <title>Steps to better code</title>
      <link>http://isaaclyman.com/blog/posts/steps-to-better-code/</link>
      <pubDate>Fri, 28 Jul 2017 14:01:53 -0600</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/steps-to-better-code/</guid>
      <description>When you start out coding, you usually spend a year or two completely oblivious to the rules of “good code.” You may hear words like “elegant” or “clean” tossed around, but you can’t define them. That’s okay. For a programmer without any experience, there’s only one metric worth keeping tabs on: does it work?
Soon, though, you’ll need to raise your expectations. Good code doesn’t just work. It’s simple, modular, testable, maintainable, thoughtful.</description>
    </item>
    
    <item>
      <title>Choosing a job title</title>
      <link>http://isaaclyman.com/blog/posts/choosing-a-job-title/</link>
      <pubDate>Wed, 19 Apr 2017 13:40:43 +0000</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/choosing-a-job-title/</guid>
      <description>Are you a coder, programmer, developer, engineer, architect or something else? My first job was an underage, under-the-table weekend gig at a pizza parlor. I’d show up at the local strip mall early Saturday morning, stash my bike, and clock in. For me, the work was grueling. I would haul 50-pound bags of flour and 10-gallon buckets of water to a giant stand mixer, and once it finished spinning I’d lift armfuls of incredibly heavy dough to a metal table where I’d cut and oil portions weighed for each size of pizza that the shop sold.</description>
    </item>
    
    <item>
      <title>8 CSS gotchas to start your morning off right</title>
      <link>http://isaaclyman.com/blog/posts/8-css-gotchas/</link>
      <pubDate>Sun, 05 Feb 2017 18:04:19 +0000</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/8-css-gotchas/</guid>
      <description>In every community there’s a coming-of-age process, a rite of passage that every newcomer must experience before he or she can really be considered an insider. For the CSS community, it goes something like this:
 Hey, this page is almost perfect. Can you just center that icon vertically? I told the boss we can roll it live in five minutes.
 For CSS junkies like me, lines like this provoke an involuntary nervous giggle, the kind of giggle you’ll hear if I tell you about the first time I got dumped or crashed my car.</description>
    </item>
    
    <item>
      <title>Developer-driven development</title>
      <link>http://isaaclyman.com/blog/posts/developer-driven-development/</link>
      <pubDate>Sun, 06 Nov 2016 04:59:40 +0000</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/developer-driven-development/</guid>
      <description>The company I work for is slowly losing its &amp;ldquo;startup&amp;rdquo; status. I’m trying not to be too nostalgic about it. After all, it means we’re doing well; a slew of truly impressive awards and contracts in recent months means we’re doing great. There’s a lot to be grateful for. At the same time, a lot is changing.
As this transition has played out, we’ve had to upgrade a few things.</description>
    </item>
    
    <item>
      <title>If doctors were like coders</title>
      <link>http://isaaclyman.com/blog/posts/if-doctors-were-like-coders/</link>
      <pubDate>Wed, 12 Oct 2016 23:38:27 +0000</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/if-doctors-were-like-coders/</guid>
      <description>Problem The patient has a broken leg.
Solution  Ask the patient to reproduce the exact scenario that resulted in the broken leg. Watch closely to see if the leg breaks again. Check for consistency by repeating the scenario a few more times. Explain that this isn’t an intended use case for the leg, and besides, it only affects one person. Ask the patient if, all things considered, he really wants to prioritize his broken leg over your other work.</description>
    </item>
    
  </channel>
</rss>