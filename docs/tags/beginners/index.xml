<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beginners on Minimum Viable Blog</title>
    <link>http://isaaclyman.com/blog/tags/beginners/</link>
    <description>Recent content in Beginners on Minimum Viable Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© 2017 by Isaac Lyman. Site powered by Hugo and GitHub.</copyright>
    <lastBuildDate>Fri, 28 Jul 2017 14:01:53 -0600</lastBuildDate>
    
	<atom:link href="http://isaaclyman.com/blog/tags/beginners/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Steps to better code</title>
      <link>http://isaaclyman.com/blog/posts/steps-to-better-code/</link>
      <pubDate>Fri, 28 Jul 2017 14:01:53 -0600</pubDate>
      
      <guid>http://isaaclyman.com/blog/posts/steps-to-better-code/</guid>
      <description>A guide for beginners When you start out coding, you usually spend a year or two completely oblivious to the rules of “good code.” You may hear words like “elegant” or “clean” tossed around, but you can’t define them. That’s okay. For a programmer without any experience, there’s only one metric worth keeping tabs on: does it work?
Soon, though, you’ll need to raise your expectations. Good code doesn’t just work.</description>
    </item>
    
  </channel>
</rss>